initSidebarItems({"enum":[["AcquireError","Error on acquiring the next image from a swapchain."],["Compute","Compute capability, supporting compute and transfer operations."],["General","General capability, supporting graphics, compute and transfer operations."],["Graphics","Graphics capability, supporting graphics and transfer operations."],["IndexType","An enum describing the type of an index value in a slice's index buffer"],["PresentMode","Specifies the mode regulating how a swapchain presents frames."],["Primitive","Describes the type of geometric primitives, created from vertex data."],["QueueType","The type of the queue, an enum encompassing `queue::Capability`"],["SubmissionError","Marks that an error occurred submitting a command to a command buffer."],["Transfer","Transfer capability, supporting only transfer operations."]],"fn":[["read_spirv","Safely read SPIR-V"]],"macro":[["spec_const_list","Macro for specifying list of specialization constatns for `EntryPoint`."]],"mod":[["adapter","Physical devices and adapters."],["buffer","Memory buffers."],["command","Command buffers."],["device","Logical device"],["error","Return values from function calls."],["format","Universal format specification. Applicable to textures, views, and vertex buffers."],["image","Image related structures."],["mapping","Memory mapping"],["memory","Types to describe the properties of memory allocated for gfx resources."],["pass","RenderPass handling."],["pool","Command pools"],["pso","Raw Pipeline State Objects"],["query","Queries are commands that can be submitted to a command buffer to record statistics or other useful values as the command buffer is running. They are often intended for profiling or other introspection, providing a mechanism for the command buffer to record data about its operation as it is running."],["queue","Command queues."],["range","Generic range type abstraction that allows ranges to be handled a little more generically."],["window","Windowing system interoperability"]],"struct":[["Adapter","The list of `Adapter` instances is obtained by calling `Instance::enumerate_adapters()`."],["AdapterInfo","Metadata about a backend adapter."],["CommandPool","Strong-typed command pool."],["CommandQueue","Stronger-typed and safer `CommandQueue` wraps around `RawCommandQueue`."],["CompositeAlpha","Specifies how the alpha channel of the images should be handled during compositing."],["Features","Features that the device supports. These only include features of the core interface and not API extensions."],["Gpu","Represents a combination of a logical device and the hardware queues it provides."],["Limits","Resource limits of a particular graphics device."],["MemoryProperties","Types of memory supported by this adapter and available memory."],["MemoryType","A description for a single chunk of memory in a heap."],["MemoryTypeId","A strongly-typed index to a particular `MemoryType`."],["QueueGroup","Strong-typed group of queues of the same queue family."],["Submission","Submission information for a command queue."],["SurfaceCapabilities","Describes information about what a `Surface`'s properties are. Fetch this with `surface.compatibility(device)`."],["SwapchainConfig","Contains all the data necessary to create a new `Swapchain`: color, depth, and number of images."]],"trait":[["Backend","The `Backend` trait wraps together all the types needed for a graphics backend. Each backend module, such as OpenGL or Metal, will implement this trait with its own concrete types."],["Capability","A Capability is an object that specifies what kind of operations a queue type performs, allowing what types support what queue operations to be described at runtime by the type system."],["DescriptorPool","A descriptor pool is a collection of memory from which descriptor sets are allocated."],["Device","Overview"],["Instance","An instantiated backend."],["PhysicalDevice","Represents a physical device (such as a GPU) capable of supporting the given backend."],["QueueFamily","General information about a queue family, available upon adapter discovery."],["Supports","A trait that indicates that a particular type of queue supports a particular `Capability`."],["Surface","A `Surface` abstracts the surface of a native window, which will be presented on the display."],["Swapchain","The `Swapchain` is the backend representation of the surface. It consists of multiple buffers, which will be presented on the surface."]],"type":[["AttributeSlot","Slot for an attribute."],["ColorSlot","Slot for an active color buffer."],["ConstantBufferSlot","Slot for a constant buffer object."],["DrawCount","Indirect draw calls count."],["IndexCount","Draw number of indices."],["InstanceCount","Draw number of instances."],["PatchSize","Number of vertices in a patch"],["QueuePriority","Scheduling hint for devices about the priority of a queue.  Values range from `0.0` (low) to `1.0` (high)."],["ResourceViewSlot","Slot for a shader resource view."],["SamplerSlot","Slot for a sampler."],["SubmissionResult","Submission result for DX11 backend.  Currently mostly unused."],["SwapImageIndex","Index of an image in the swapchain."],["UnorderedViewSlot","Slot for an unordered access object."],["VertexCount","Draw vertex count."],["VertexOffset","Draw vertex base offset."],["WorkGroupCount","Number of work groups."]]});