initSidebarItems({"enum":[["ChangeDetection","Helper structure for tracking indexed changes for per-image draw call recording."]],"fn":[["align_size","Helper function for memory alignment."],["desc_write","Helper function to create a `DescriptorSetWrite` from arguments"],["ensure_buffer","This function is used extensively to ensure buffers are allocated and sized appropriately to their use. This function will either allocate a new buffer, resize the current buffer, or perform no action depending on the needs of the function call. This can be used for dynamic buffer allocation or single static buffer allocation."],["next_range","Helper function to clone ranges."],["opt_range","Helper function to convert `Range` to an `Option` range."],["push_vertex_desc","Helper function which takes an iterator of tuple-stored vertex buffer descriptions and writes into `VertexBufferDesc` and `AttributeDesc` collections."],["set_layout_bindings","Combines an iterator of descriptor information in tuple form into a `DescriptorSetLayoutBinding` # Limitations * All descriptors are created as single count and immutable_samplers is false."],["simple_shader_set","Helper function to create a `GraphicsShaderSet`"],["simple_shader_set_ext","Helper function to create a `GraphicsShaderSet`"],["slice_as_bytes","Convert any type slice to bytes slice."],["texture_desc","Helper function to create a `CombinedImageSampler` from a supplied `Texture` and `Layout`"],["usize_range","Helper function to convert `Range` types."],["vertex_desc","Helper function which takes an array of vertex format information and returns allocated `VertexBufferDesc` and `AttributeDesc` collections."],["write_into_slice","Copy the byte-data from an iterator into a slice"]],"struct":[["LookupBuilder","Helper forward lookup struct using `FnvHashMap`"],["TapCountIterator","Iterator counting adapter."]],"trait":[["TapCountIter","Iterator counting adapter."]]});