initSidebarItems({"constant":[["BUFFER_SIZE","The maximum number of bytes that any number-to-string function may write."],["MAX_F32_SIZE","The minimum buffer size required to serialize any `f32` value."],["MAX_F64_SIZE","The minimum buffer size required to serialize any `f64` value."],["MAX_I128_SIZE","The minimum buffer size required to serialize any `i128` value."],["MAX_I16_SIZE","The minimum buffer size required to serialize any `i16` value."],["MAX_I32_SIZE","The minimum buffer size required to serialize any `i32` value."],["MAX_I64_SIZE","The minimum buffer size required to serialize any `i64` value."],["MAX_I8_SIZE","The minimum buffer size required to serialize any `i8` value."],["MAX_ISIZE_SIZE","The minimum buffer size required to serialize any `isize` value."],["MAX_U128_SIZE","The minimum buffer size required to serialize any `u128` value."],["MAX_U16_SIZE","The minimum buffer size required to serialize any `u16` value."],["MAX_U32_SIZE","The minimum buffer size required to serialize any `u32` value."],["MAX_U64_SIZE","The minimum buffer size required to serialize any `u64` value."],["MAX_U8_SIZE","The minimum buffer size required to serialize any `u8` value."],["MAX_USIZE_SIZE","The minimum buffer size required to serialize any `usize` value."]],"enum":[["ErrorCode","Error code, indicating success or failure."],["RoundingKind","Rounding type for float-parsing."]],"fn":[["atof32_lossy_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atof32_lossy_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atof32_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atof32_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atof64_lossy_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atof64_lossy_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atof64_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atof64_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoi128_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoi128_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoi16_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoi16_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoi32_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoi32_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoi64_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoi64_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoi8_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoi8_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atoisize_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atoisize_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atou128_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atou128_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atou16_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atou16_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atou32_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atou32_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atou64_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atou64_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atou8_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atou8_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["atousize_range","Unchecked parser for a string-to-number conversion using pointer ranges."],["atousize_slice","Unchecked parser for a string-to-number conversion using Rust slices."],["f32toa_range","Serializer for a number-to-string conversion using pointer ranges."],["f32toa_slice","Serializer for a number-to-string conversion using Rust slices."],["f64toa_range","Serializer for a number-to-string conversion using pointer ranges."],["f64toa_slice","Serializer for a number-to-string conversion using Rust slices."],["get_inf_string","Get the short representation of an Infinity literal as a byte slice."],["get_inf_string_ffi","Get the short representation of an Infinity literal as a pointer and size."],["get_infinity_string","Get the long representation of an Infinity literal as a byte slice."],["get_infinity_string_ffi","Get the long representation of an Infinity literal as a pointer and size."],["get_nan_string","Get string representation of Not a Number as a byte slice."],["get_nan_string_ffi","Get string representation of Not a Number as a pointer and size."],["i128toa_range","Serializer for a number-to-string conversion using pointer ranges."],["i128toa_slice","Serializer for a number-to-string conversion using Rust slices."],["i16toa_range","Serializer for a number-to-string conversion using pointer ranges."],["i16toa_slice","Serializer for a number-to-string conversion using Rust slices."],["i32toa_range","Serializer for a number-to-string conversion using pointer ranges."],["i32toa_slice","Serializer for a number-to-string conversion using Rust slices."],["i64toa_range","Serializer for a number-to-string conversion using pointer ranges."],["i64toa_slice","Serializer for a number-to-string conversion using Rust slices."],["i8toa_range","Serializer for a number-to-string conversion using pointer ranges."],["i8toa_slice","Serializer for a number-to-string conversion using Rust slices."],["is_empty","Check if the error code designates an empty byte array was encountered."],["is_invalid_digit","Check if the error code designates an invalid digit was encountered."],["is_overflow","Check if the error code designates integer overflow."],["is_success","Check if the error code is successful."],["isizetoa_range","Serializer for a number-to-string conversion using pointer ranges."],["isizetoa_slice","Serializer for a number-to-string conversion using Rust slices."],["set_inf_string","Set the short representation of Infinity from a byte slice."],["set_inf_string_ffi","Set the short representation of Infinity from a pointer and size."],["set_infinity_string","Set the long representation of Infinity from a byte slice."],["set_infinity_string_ffi","Set the long representation of Infinity from a pointer and size."],["set_nan_string","Set representation of Not a Number from a byte slice."],["set_nan_string_ffi","Set representation of Not a Number from a pointer and size."],["try_atof32_lossy_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atof32_lossy_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atof32_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atof32_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atof64_lossy_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atof64_lossy_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atof64_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atof64_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoi128_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoi128_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoi16_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoi16_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoi32_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoi32_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoi64_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoi64_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoi8_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoi8_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atoisize_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atoisize_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atou128_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atou128_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atou16_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atou16_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atou32_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atou32_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atou64_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atou64_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atou8_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atou8_slice","Checked parser for a string-to-number conversion using Rust slices."],["try_atousize_range","Checked parser for a string-to-number conversion using Rust pointer ranges."],["try_atousize_slice","Checked parser for a string-to-number conversion using Rust slices."],["u128toa_range","Serializer for a number-to-string conversion using pointer ranges."],["u128toa_slice","Serializer for a number-to-string conversion using Rust slices."],["u16toa_range","Serializer for a number-to-string conversion using pointer ranges."],["u16toa_slice","Serializer for a number-to-string conversion using Rust slices."],["u32toa_range","Serializer for a number-to-string conversion using pointer ranges."],["u32toa_slice","Serializer for a number-to-string conversion using Rust slices."],["u64toa_range","Serializer for a number-to-string conversion using pointer ranges."],["u64toa_slice","Serializer for a number-to-string conversion using Rust slices."],["u8toa_range","Serializer for a number-to-string conversion using pointer ranges."],["u8toa_slice","Serializer for a number-to-string conversion using Rust slices."],["usizetoa_range","Serializer for a number-to-string conversion using pointer ranges."],["usizetoa_slice","Serializer for a number-to-string conversion using Rust slices."]],"macro":[["arrvec","Macro to automate simplify the creation of an ArrayVec."]],"static":[["BUFFER_SIZE_FFI","Symbol-generating constant for the maximum number of bytes that any number-to-string function may write."],["EXPONENT_DEFAULT_CHAR","Default character for scientific notation, used when the radix < 15."],["MAX_F32_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `f32` value."],["MAX_F64_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `f64` value."],["MAX_I128_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `i128` value."],["MAX_I16_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `i16` value."],["MAX_I32_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `i32` value."],["MAX_I64_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `i64` value."],["MAX_I8_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `i8` value."],["MAX_ISIZE_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `isize` value."],["MAX_U128_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `u128` value."],["MAX_U16_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `u16` value."],["MAX_U32_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `u32` value."],["MAX_U64_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `u64` value."],["MAX_U8_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `u8` value."],["MAX_USIZE_SIZE_FFI","Symbol-generating constant for the minimum buffer required to serialize any `usize` value."]],"struct":[["Error","C-compatible error for FFI."],["Result","C-compatible result type from parsing strings-to-numbers for FFI."]],"type":[["F32Result","Expanded generic for a result type containing a value of type f32."],["F64Result","Expanded generic for a result type containing a value of type f64."],["I128Result","Expanded generic for a result type containing a value of type i128."],["I16Result","Expanded generic for a result type containing a value of type i16."],["I32Result","Expanded generic for a result type containing a value of type i32."],["I64Result","Expanded generic for a result type containing a value of type i64."],["I8Result","Expanded generic for a result type containing a value of type i8."],["IsizeResult","Expanded generic for a result type containing a value of type isize."],["U128Result","Expanded generic for a result type containing a value of type u128."],["U16Result","Expanded generic for a result type containing a value of type u16."],["U32Result","Expanded generic for a result type containing a value of type u32."],["U64Result","Expanded generic for a result type containing a value of type u64."],["U8Result","Expanded generic for a result type containing a value of type u8."],["UsizeResult","Expanded generic for a result type containing a value of type usize."]]});